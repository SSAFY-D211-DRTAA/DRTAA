# Step 1: ROS Noetic을 포함한 기본 이미지 설정
FROM osrf/ros:noetic-desktop-full-focal

# Step 2: 필수 패키지 및 빌드 도구 설치
RUN apt-get update && apt-get install -y \
    # ROS 패키지 (GUI 도구 제외)
    ros-noetic-image-transport \
    ros-noetic-compressed-image-transport \
    ros-noetic-rosbridge-suite \
    ros-noetic-rosserial \
    \
    # 개발 도구 및 빌드 필수 패키지
    build-essential \
    cmake \
    python3-catkin-tools \
    git \
    vim \
    nano \
    \
    # Python 및 기타 유틸리티
    python3-opencv \
    python3-pip \
    python3-venv \
    \
    # 디버깅 및 성능 분석 도구
    gdb \
    valgrind \
    htop \
    \
    # 코드 품질 및 형상 관리 도구
    clang-format \
    cppcheck \
    git-lfs \
    \
    # 트리 구조 보기 도구
    tree \
    \
    # 클린업
    && rm -rf /var/lib/apt/lists/*

# 라이브러리 설치
RUN pip3 install --no-cache-dir pyproj

# Step 3: catkin workspace 디렉토리 생성
RUN mkdir -p /root/catkin_ws/src

# Step 4: 작업 디렉토리 설정
WORKDIR /root/catkin_ws

# Step 5: 소스 파일 복사
COPY ./catkin_ws/src /root/catkin_ws/src

# Step 6: 기본 환경 설정
RUN echo "source /opt/ros/noetic/setup.bash" >> ~/.bashrc && \
    echo "source /root/catkin_ws/devel/setup.bash" >> ~/.bashrc && \
    echo 'alias cm="catkin_make"' >> ~/.bashrc && \
    echo 'alias scds="source /root/catkin_ws/devel/setup.bash"' >> ~/.bashrc && \
    echo 'alias rosbridge_server="roslaunch rosbridge_server rosbridge_websocket.launch"' >> ~/.bashrc

# Step 7: catkin workspace 빌드
WORKDIR /root/catkin_ws
RUN /bin/bash -c "source /opt/ros/noetic/setup.bash && catkin_make"


# 기본 개발 환경 이미지를 위한 CMD 설정 (roslaunch 실행)
# CMD ["roslaunch", "rosbridge_server", "rosbridge_websocket.launch"]
CMD ["bash"]